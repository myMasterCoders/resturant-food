import {
  toNumber
} from "./chunk-OCZQGT2X.js";
import {
  arrayOfLength
} from "./chunk-36MHHFDE.js";

// src/numbers/number-format/number-format.ts
var numberFormat = (numberOrStringRepresentingNumber, decimals = 0, fractionSeparator = ".", thousandsSeparator = "\xA0") => {
  const number = toNumber(numberOrStringRepresentingNumber, 0);
  const toFixedFix = () => {
    const k = 10 ** decimals;
    return Math.round(number * k) / k;
  };
  const parts = String(decimals ? toFixedFix() : Math.round(number)).split(".");
  let [int, fraction = ""] = parts;
  if (int.length > 3) {
    int = int.replaceAll(/\B(?=(?:\d{3})+(?!\d))/g, thousandsSeparator);
  }
  if (fraction.length < decimals) {
    fraction += arrayOfLength(decimals - fraction.length + 1).join("0");
  }
  return [int, fraction].filter(Boolean).join(fractionSeparator);
};

export {
  numberFormat
};
