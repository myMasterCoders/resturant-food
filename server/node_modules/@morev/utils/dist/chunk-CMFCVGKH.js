import {
  randomInteger
} from "./chunk-FDBXWY5V.js";
import {
  arrayOfLength
} from "./chunk-36MHHFDE.js";
import {
  arrayShuffle
} from "./chunk-IECQATAF.js";
import {
  isInteger
} from "./chunk-4W3EM56D.js";

// src/arrays/array-sample/array-sample.ts
var arraySample = (array, size = 1, oversize = false) => {
  if (!array?.length || !isInteger(size) || size < 1)
    return void 0;
  if (size === 1) {
    return array[randomInteger(0, array.length - 1)];
  }
  !oversize && (size = Math.min(array.length, size));
  const result = [];
  while (result.length < size) {
    const neededCount = size - result.length;
    const iterationIndexes = arrayOfLength(array.length, (index) => index);
    if (neededCount > array.length) {
      result.push(...iterationIndexes.map((i) => array[i]));
    } else {
      result.push(...arrayShuffle(iterationIndexes).slice(0, neededCount).map((i) => array[i]));
    }
  }
  return result;
};

export {
  arraySample
};
