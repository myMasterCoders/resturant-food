import {
  toNumber
} from "./chunk-OCZQGT2X.js";
import {
  toArray
} from "./chunk-OAZLYBJA.js";
import {
  isNullish
} from "./chunk-Z5IVBZLV.js";
import {
  isObject
} from "./chunk-XUWL4VKZ.js";
import {
  isArray
} from "./chunk-UDVSPJHY.js";

// src/objects/object-get/object-get.ts
var extractSegments = (path) => toArray(path).map((p) => p.toString().trim()).flatMap((part) => part.replaceAll(/\[(.?)]/g, ".$1.").replaceAll(/\.+/g, ".").split(".").filter(Boolean).map((p) => toNumber(p, p)));
var objectGet = (input, path, defaultValue = void 0) => {
  if (!input || !isObject(input) && !isArray(input) || isNullish(path)) {
    return defaultValue;
  }
  const segments = extractSegments(path);
  let result = input;
  while (segments.length) {
    const property = segments.shift();
    if (!(property in result))
      return defaultValue;
    result = result[property];
  }
  return result;
};

export {
  objectGet
};
