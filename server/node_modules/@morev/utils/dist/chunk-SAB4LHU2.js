import {
  rangesSort
} from "./chunk-6DDWDJUT.js";
import {
  formatInfinity
} from "./chunk-XGEUS3NH.js";
import {
  isNullish
} from "./chunk-Z5IVBZLV.js";

// src/ranges/ranges-merge/ranges-merge.ts
var rangesMerge = (ranges, joinEdges = true, infinityToNull = false) => {
  const sorted = rangesSort(ranges, infinityToNull).map((r) => [
    isNullish(r[0]) ? -Infinity : r[0],
    isNullish(r[1]) ? Infinity : r[1]
  ]);
  for (let l = sorted.length - 1, i = l; i > 0; i--) {
    if (sorted[i][0] <= sorted[i - 1][0] || !joinEdges && sorted[i][0] < sorted[i - 1][1] || joinEdges && sorted[i][0] <= sorted[i - 1][1]) {
      sorted[i - 1][0] = Math.min(sorted[i][0], sorted[i - 1][0]);
      sorted[i - 1][1] = Math.max(sorted[i][1], sorted[i - 1][1]);
      sorted.splice(i, 1);
      i = sorted.length;
    }
  }
  return sorted.length ? sorted.map((r) => [
    formatInfinity(r[0], infinityToNull),
    formatInfinity(r[1], infinityToNull)
  ]) : [];
};

export {
  rangesMerge
};
