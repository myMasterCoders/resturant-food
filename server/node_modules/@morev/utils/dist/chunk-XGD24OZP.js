import {
  resolve,
  series
} from "./chunk-GSJOLHOQ.js";

// src/arrays/async-array/async-array.ts
function forEach(callback) {
  return resolve(this).then(
    series((results, value, index, arr) => callback(value, index, arr), void 0)
  );
}
function reduce(reducer, initial) {
  return resolve(this).then(
    series(reducer, initial, "left-to-right")
  );
}
function reduceRight(reducer, initial) {
  return resolve(this).then(
    series(reducer, initial, "right-to-left")
  );
}
function map(mapper) {
  return resolve(this).then(
    (values) => Promise.all(
      values.map((value, index, arr) => mapper(value, index, arr))
    )
  );
}
var asyncArray = (arr) => {
  return {
    forEach: forEach.bind(arr),
    reduce: reduce.bind(arr),
    reduceRight: reduceRight.bind(arr),
    map: map.bind(arr)
  };
};

export {
  asyncArray
};
